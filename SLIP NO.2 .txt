SLIP NO.2 
Q1 
HTML file : 
<html> 
<body> 
<form action="slip21_2_1.php" method="get"> 
<center> 
<b>Select font style :</b><input type=text name=s1> <br> 
<b>Enter font size : </b><input type=text name=s><br> 
<b>Enter font color : </b><input type=text name=c><br> 
<b>Enter background color :</b> <input type=text name=b><br> 

<input type=submit value="Next"> 
</center> 
</form> 
</body> 
</html> 
PHP CODE 
 <?php 
echo "style is ".$_GET['s1']."<br>color is ".$_GET['c']."<br>Background color is 
".$_GET['b']."<br>size is ".$_GET['s']; 
setcookie("set1",$_GET['s1'],time()+3600); 
setcookie("set2",$_GET['c'],time()+3600); 
setcookie("set3",$_GET['b'],time()+3600); 
setcookie("set4",$_GET['s'],time()+3600); 
?> 
 
<html> 
<body> 
<form action="slip21_2_2.php"> 
<input type=submit value=OK> 
</form> 
</body> 
</html>  
 
 
PHP CODE 
 <?php 
$style = $_COOKIE['set1']; 
$color = $_COOKIE['set2']; 
$size = $_COOKIE['set4']; 
$b_color = $_COOKIE['set3']; 
$msg = "Welcome to IP"; 
echo "<body bgcolor=$b_color>"; 
echo "<font face=$style color=$color size=$size>$msg"; 
echo "</font></body>"; 
?> 
 
 2.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

df=pd.read_csv('Files/Position_Salaries.csv')
print(df)
print(df.isnull().sum())

X=np.array(df[['Level']])
y=np.array(df[['Salary']])

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=7,random_state=42)

print("Training set shape:")
print("X_train:", X_train.shape)
print("y_train:", y_train.shape)

print("\nTesting set shape:")
print("X_test:", X_test.shape)
print("y_test:", y_test.shape)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print('y prediction: ',y_pred)

mse = metrics.mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
print("\nModel Evaluation:")
print("Mean Squared Error (MSE):", mse)
print("Root Mean Squared Error (RMSE):", rmse)

print("Coefficients:",model.coef_)
print("Intercept:",model.intercept_)